import logging
from datetime import datetime, timedelta
from aiogram import Bot
from database.models import database



async def check_today_reminders(bot: Bot):

    try:
        today = datetime.now().strftime("%d.%m")
        today_reminders = database.get_today_reminders(today)
        for user_id, name, message in today_reminders:
            try:
                await bot.send_message(
                    user_id,
                    f"üéâ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è! üéâ\n\n"
                    f"–°—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É {name}!\n"
                    f"–¢–≤–æ—î –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message}",
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"Failed to send birthday reminder to {user_id}: {e}")
    except Exception as e:
        logging.error(f"Error fetching today's reminders: {e}")

async def check_early_reminders(bot:Bot):

    try:
        today = datetime.now().strftime("%d.%m")
        early_reminders = database.get_early_reminders(today)

        for user_id, name, message, days_before in early_reminders:
            try:
                await bot.send_message(
                    user_id,
                    f"üéÅ –ó–∞–≤—á–∞—Å–Ω–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è! üéÅ\n\n"
                    f"–£ {name} –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ {days_before} –¥–Ω—ñ!\n"
                    f"–ù–µ –∑–∞–±—É–¥—å –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏!\n"
                    f"–¢–≤–æ—î –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message}",
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.error(f"Failed to send early reminder to {user_id}: {e}")
    except Exception as e:
        logging.error(f"Error fetching early reminders: {e}")

async def check_reminders(bot:Bot):
    await check_today_reminders(bot)
    await check_early_reminders(bot)
